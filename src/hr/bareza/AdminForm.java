/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.bareza;

import hr.bareza.dal.Repository;
import hr.bareza.dal.RepositoryFactory;
import hr.bareza.models.Genre;
import hr.bareza.models.Movie;
import hr.bareza.models.Person;
import hr.bareza.models.User;
import hr.bareza.parser.RssParser;
import hr.bareza.utils.MessageUtils;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Bareza
 */
public class AdminForm extends javax.swing.JFrame {

    public static final String POSTERS = "posters";
    
    private Repository repository;
    
    /**
     * Creates new form MainForm
     */
    public AdminForm() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        btnBackToLogIn = new javax.swing.JButton();
        btnEditMovies = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        tfPassword = new javax.swing.JTextField();
        btnCreateNewUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        tfDeleteUser = new javax.swing.JTextField();
        chkbAdministrator = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        lblDeleteUserError = new javax.swing.JLabel();
        lblPasswordError = new javax.swing.JLabel();
        lblUsernameError = new javax.swing.JLabel();
        pnlClearRepository = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblClearRepository = new javax.swing.JLabel();
        pnlUploadMovies = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lblUploadMovies = new javax.swing.JLabel();
        lblAdmin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adminstrator");
        setResizable(false);

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 153, 153));
        kGradientPanel1.setkGradientFocus(200);
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 102, 204));

        btnBackToLogIn.setBackground(new java.awt.Color(255, 255, 255));
        btnBackToLogIn.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        btnBackToLogIn.setForeground(new java.awt.Color(0, 111, 194));
        btnBackToLogIn.setText("Back to log in");
        btnBackToLogIn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBackToLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToLogInActionPerformed(evt);
            }
        });

        btnEditMovies.setBackground(new java.awt.Color(255, 255, 255));
        btnEditMovies.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        btnEditMovies.setForeground(new java.awt.Color(0, 111, 194));
        btnEditMovies.setText("Edit movies");
        btnEditMovies.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnEditMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditMoviesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(208, 152, 255));
        jLabel1.setText("Users:");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 19)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(208, 152, 255));
        jLabel2.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 19)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(208, 152, 255));
        jLabel3.setText("Password:");

        tfUsername.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        tfUsername.setForeground(new java.awt.Color(208, 152, 255));
        tfUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 1, 0, new java.awt.Color(208, 152, 255)));

        tfPassword.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        tfPassword.setForeground(new java.awt.Color(208, 152, 255));
        tfPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 1, 0, new java.awt.Color(208, 152, 255)));

        btnCreateNewUser.setBackground(new java.awt.Color(255, 255, 255));
        btnCreateNewUser.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        btnCreateNewUser.setForeground(new java.awt.Color(0, 152, 153));
        btnCreateNewUser.setText("Create new User");
        btnCreateNewUser.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCreateNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(0, 147, 158));
        btnDeleteUser.setText("Delete user:");
        btnDeleteUser.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        tfDeleteUser.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        tfDeleteUser.setForeground(new java.awt.Color(208, 152, 255));
        tfDeleteUser.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 1, 0, new java.awt.Color(208, 152, 255)));

        chkbAdministrator.setBackground(new java.awt.Color(255, 255, 255));
        chkbAdministrator.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        chkbAdministrator.setForeground(new java.awt.Color(208, 152, 255));
        chkbAdministrator.setText("Administrator");
        chkbAdministrator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkbAdministratorMouseClicked(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(208, 152, 255));

        lblDeleteUserError.setForeground(new java.awt.Color(255, 0, 0));
        lblDeleteUserError.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bareza\\OneDrive - Visoko uciliste Algebra\\4.  Semestar\\Programiranje u Javi 1\\JavaProject\\JavaProject\\src\\resources\\icons8-not-applicable-32.png")); // NOI18N

        lblPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        lblPasswordError.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bareza\\OneDrive - Visoko uciliste Algebra\\4.  Semestar\\Programiranje u Javi 1\\JavaProject\\JavaProject\\src\\resources\\icons8-not-applicable-32.png")); // NOI18N

        lblUsernameError.setForeground(new java.awt.Color(255, 0, 0));
        lblUsernameError.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bareza\\OneDrive - Visoko uciliste Algebra\\4.  Semestar\\Programiranje u Javi 1\\JavaProject\\JavaProject\\src\\resources\\icons8-not-applicable-32.png")); // NOI18N

        pnlClearRepository.setBackground(new java.awt.Color(18, 69, 137));
        pnlClearRepository.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(208, 152, 255), 3, true));
        pnlClearRepository.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlClearRepositoryMouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bareza\\OneDrive - Visoko uciliste Algebra\\4.  Semestar\\Programiranje u Javi 1\\JavaProject\\JavaProject\\src\\resources\\icons8-trash-64.png")); // NOI18N

        lblClearRepository.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lblClearRepository.setForeground(new java.awt.Color(208, 152, 255));
        lblClearRepository.setText("Clear Repository");

        javax.swing.GroupLayout pnlClearRepositoryLayout = new javax.swing.GroupLayout(pnlClearRepository);
        pnlClearRepository.setLayout(pnlClearRepositoryLayout);
        pnlClearRepositoryLayout.setHorizontalGroup(
            pnlClearRepositoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClearRepositoryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblClearRepository)
                .addGap(56, 56, 56))
            .addGroup(pnlClearRepositoryLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlClearRepositoryLayout.setVerticalGroup(
            pnlClearRepositoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClearRepositoryLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(lblClearRepository, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        pnlUploadMovies.setBackground(new java.awt.Color(18, 69, 137));
        pnlUploadMovies.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(208, 152, 255), 3, true));
        pnlUploadMovies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlUploadMoviesMouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bareza\\OneDrive - Visoko uciliste Algebra\\4.  Semestar\\Programiranje u Javi 1\\JavaProject\\JavaProject\\src\\resources\\icons8-upload-to-the-cloud-64.png")); // NOI18N

        lblUploadMovies.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        lblUploadMovies.setForeground(new java.awt.Color(208, 152, 255));
        lblUploadMovies.setText("Upload Movies");

        javax.swing.GroupLayout pnlUploadMoviesLayout = new javax.swing.GroupLayout(pnlUploadMovies);
        pnlUploadMovies.setLayout(pnlUploadMoviesLayout);
        pnlUploadMoviesLayout.setHorizontalGroup(
            pnlUploadMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUploadMoviesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblUploadMovies)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUploadMoviesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(59, 59, 59))
        );
        pnlUploadMoviesLayout.setVerticalGroup(
            pnlUploadMoviesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUploadMoviesLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(lblUploadMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        lblAdmin.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bareza\\OneDrive - Visoko uciliste Algebra\\4.  Semestar\\Programiranje u Javi 1\\JavaProject\\JavaProject\\src\\resources\\icons8-lord-45.png")); // NOI18N

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBackToLogIn)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(pnlUploadMovies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pnlClearRepository, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(lblAdmin, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addComponent(chkbAdministrator)
                                        .addGap(152, 152, 152))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                        .addGap(99, 99, 99)
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(tfUsername)
                                            .addComponent(tfPassword))
                                        .addGap(10, 10, 10)))
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnCreateNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(btnDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblDeleteUserError, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(18, Short.MAX_VALUE))))
            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addContainerGap(12, Short.MAX_VALUE)))
        );

        kGradientPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBackToLogIn, btnEditMovies});

        kGradientPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pnlClearRepository, pnlUploadMovies});

        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackToLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlClearRepository, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlUploadMovies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsernameError, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCreateNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkbAdministrator, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)))
                    .addComponent(lblAdmin))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDeleteUserError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDeleteUser)
                        .addComponent(tfDeleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnEditMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(159, 159, 159)))
        );

        kGradientPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDeleteUser, lblDeleteUserError, lblPasswordError, lblUsernameError, tfDeleteUser, tfPassword, tfUsername});

        kGradientPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {pnlClearRepository, pnlUploadMovies});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackToLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToLogInActionPerformed
        new LogInForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackToLogInActionPerformed

    private void btnEditMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditMoviesActionPerformed
        new UserForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnEditMoviesActionPerformed

    private void btnCreateNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewUserActionPerformed
        if (createNewUserFormValid()) {
            User user = new User(tfUsername.getText().trim(), tfPassword.getText().trim(), chkbAdministrator.isSelected());
            try {
                if (repository.createUser(user) == 0) {
                    MessageUtils.showInformationMessage("User created", "User created successfully!");
                    lblAdmin.setVisible(false);
                } else { 
                    MessageUtils.showErrorMessage("Error", "User already exists!");
                }
            } catch (Exception ex) {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to create new user!");
            }
            clearNewUserForm();
        }
    }//GEN-LAST:event_btnCreateNewUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        try {
            if (repository.deleteUser(tfDeleteUser.getText().trim()) == 0) {
                MessageUtils.showInformationMessage("User deleted", "User was successfully deleted!");
            } else {
                lblDeleteUserError.setVisible(true);
                MessageUtils.showErrorMessage("Error", "No user with such username!");
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to get data!");
        }
        tfDeleteUser.setText("");
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void chkbAdministratorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkbAdministratorMouseClicked
        if (chkbAdministrator.isSelected()) {
            lblAdmin.setVisible(true);
        } else {
            lblAdmin.setVisible(false);
        }
    }//GEN-LAST:event_chkbAdministratorMouseClicked

    private void pnlUploadMoviesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlUploadMoviesMouseClicked
        if (MessageUtils.showConfirmDialog("Upload movies", "Are you sure?") == JOptionPane.YES_OPTION) {
            try {
                uploadMovies();
                enableClearRepositoryButton();
                MessageUtils.showInformationMessage("Upload", "Upload finished!");
            } catch (Exception ex) {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to download the content!");
            }
        }
    }//GEN-LAST:event_pnlUploadMoviesMouseClicked

    private void pnlClearRepositoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlClearRepositoryMouseClicked
        if (MessageUtils.showConfirmDialog("Clear repository", "Are you sure?") == JOptionPane.YES_OPTION) {
        
            try {
                repository.ClearRepository();
                for (File file : new File(POSTERS).listFiles()) {
                    file.delete();
                }
                disableClearRepositoryButton();
            } catch (Exception ex) {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to clear repository!");
            }
        }
    }//GEN-LAST:event_pnlClearRepositoryMouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackToLogIn;
    private javax.swing.JButton btnCreateNewUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEditMovies;
    private javax.swing.JCheckBox chkbAdministrator;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator3;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblClearRepository;
    private javax.swing.JLabel lblDeleteUserError;
    private javax.swing.JLabel lblPasswordError;
    private javax.swing.JLabel lblUploadMovies;
    private javax.swing.JLabel lblUsernameError;
    private javax.swing.JPanel pnlClearRepository;
    private javax.swing.JPanel pnlUploadMovies;
    private javax.swing.JTextField tfDeleteUser;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            initRepository();
            initValidation();
        } catch (Exception ex) {
            Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to initialize the form!");
            System.exit(1);
        }
        
    }

    private void initRepository() throws Exception {
        repository = RepositoryFactory.getRepository();
        checkRepositoryEmpty();
    }
    
    private void checkRepositoryEmpty() throws Exception {
        if (repository.selectMovies().isEmpty()) {
            pnlClearRepository.setEnabled(false);
        }
    }
    
    private void uploadMovies() throws IOException, Exception {
        lblUploadMovies.setText("Uploading...");    
        List<Movie> movies = RssParser.parse();
        
        for (Movie movie : movies) {
            int movieId = repository.createMovie(movie);
            
            if (movie.getActors() != null && movieId != 0) {
                for (Person actor : movie.getActors()) {
                    repository.createActor(movieId, actor);
                }
            }
            
            if (movie.getDirectors() != null && movieId != 0) {
                for (Person director : movie.getDirectors()) {
                    repository.createDirector(movieId, director);
                }
            }
            
            if (movie.getGenres() != null && movieId != 0) {
                for (Genre genre : movie.getGenres()) {
                    repository.createGenre(movieId, genre);
                }
            }
        }
        lblUploadMovies.setText("Upload movies");
    }

    private boolean createNewUserFormValid() {
        boolean ok = true;
        
        if (tfUsername.getText().trim().isEmpty()) {
            lblUsernameError.setVisible(true);
            ok = false;
        }
        
        if (tfPassword.getText().length() < 8) {
            lblPasswordError.setVisible(true);
            MessageUtils.showInformationMessage("Password", "Password has to be 8 or more digits long!");
            ok = false;
        }
        
        return ok;
    }

    private void clearNewUserForm() {
        tfUsername.setText("");
        tfPassword.setText("");
        chkbAdministrator.setSelected(false);
    }

    private void initValidation() {
        lblAdmin.setVisible(false);
        lblUsernameError.setVisible(false);
        lblPasswordError.setVisible(false);
        lblDeleteUserError.setVisible(false);
    }

    private void enableClearRepositoryButton() {
        lblClearRepository.setForeground(new Color(208, 152, 255));
        pnlClearRepository.setEnabled(true);
    }

    private void disableClearRepositoryButton() {
        pnlClearRepository.setEnabled(false);
        lblClearRepository.setForeground(Color.GRAY);
    }
    
}
